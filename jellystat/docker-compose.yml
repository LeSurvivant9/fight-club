services:
  jellystat-db:
    image: postgres:15.2
    shm_size: 1gb
    container_name: jellystat-db
    networks:
      proxy:
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - /opt/postgres:/var/lib/postgresql/data

  jellystat:
    image: cyfershepard/jellystat:latest
    container_name: jellystat
    networks:
      proxy:
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_IP: jellystat-db
      POSTGRES_PORT: 5432
      JWT_SECRET: ${JWT_SECRET}
      TZ: ${TIMEZONE}
    volumes:
      - /opt/jellystat:/app/backend/backup-data
    depends_on:
      - jellystat-db
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.jellystat.entrypoints=http"
      - "traefik.http.routers.jellystat.rule=Host(`jellystat.${DOMAIN}`)"
      - "traefik.http.middlewares.jellystat-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jellystat.middlewares=jellystat-https-redirect"
      - "traefik.http.routers.jellystat-secure.entrypoints=https"
      - "traefik.http.routers.jellystat-secure.rule=Host(`jellystat.${DOMAIN}`)"
      - "traefik.http.routers.jellystat-secure.tls=true"
      - "traefik.http.routers.jellystat-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.jellystat-secure.service=jellystat"
      - "traefik.http.services.jellystat.loadbalancer.server.port=3000"

networks:
  proxy:
    external: true